namesandcode {
  chars [char+] = ‛«char»’
  char_predicate [x] = ‛«x»’
  char_code [x] = ‛«x»’
  char_name [x] = ‛«x»’
  char_other [x] = ‛«x»’

  predicateString [lq _name rq spaces _colon spaces2 lq2 cLambda id codeChar* rq2] = ‛λ ⟪«_.cleanupName (id)»⟫ ⟪«codeChar»⟫’
  codeString [lq _name rq spaces _colon spaces2 lq2 cCh id codeChar* rq2] = ‛č ⟪«_.cleanupName (id)»⟫ ⟪«codeChar»⟫’ 
  nameString [lq _name rq spaces _colon spaces2 string] = ‛ė ⟪«_.cleanupName (string)»⟫’

  id [idItem+] = ‛«idItem»’
  idItem_br [c] = ‛’
  idItem_other [c] = ‛«c»’
    
    contentItem_wrapped [cLT basicID attr? cGT contentItem+ cLTSL basicID cGT] = ‛«LT»«basicID»«attr»«cGT»«contentItem»«cLTSL»«basicID»«cGT»’
    contentItem_basic [c] = ‛«c»’

    basicContent_next [c] = ‛«c»’
    basicContent_string [c] = ‛«c»’
    basicContent_any [c] = ‛«c»’

    attr [ws+ singleAttr+] = ‛«ws»«singleAttr»’
    singleAttr [ws* basicID _eq string _comma?] = ‛«ws»«basicID»«_eq»«string»«_comma»’
    
    brHTML [cLT _br attr? cGT] = ‛«cLT»«_br»«attr»«cGT»’

    basicID [firstLetter moreIDCharacter*] = ‛«firstLetter»«moreIDCharacter»’
    firstLetter [c] = ‛«c»’
    moreIDCharacter [c] = ‛«c»’ 
    
      codeChar [c] = ‛«c»’ 

      cLambda [c] = ‛«c»’ 
      cCh [c] = ‛«c»’ 

      cLTSL [cLT cSL] = ‛«cLT»«cSL»’
      string [lq cs* rq] = ‛«cs»’

      cNext [c] = ‛«c»’ 
      cOpen [c] = ‛«c»’ 
      cClose [c] = ‛«c»’ 
      cLT [c] = ‛«c»’ 
      cGT [c] = ‛«c»’ 
      cSL [c] = ‛«c»’ 
      cSP  [c] = ‛«c»’ 
      cTAB [c] = ‛«c»’ 
      cNL [c] = ‛«c»’ 
      lq [c] = ‛«c»’ 
      rq [c] = ‛«c»’ 

      macroCharacter [c] = ‛«c»’ 
      containerCharacter [c] = ‛«c»’ 
      ws [c] = ‛«c»’
      delimiter [c] = ‛«c»’ 
}
